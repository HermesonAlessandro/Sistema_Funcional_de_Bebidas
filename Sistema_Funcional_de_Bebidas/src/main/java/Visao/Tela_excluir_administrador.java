/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Visao;
import DAO.AdministradorDAO;
import Modelo.Administrador;
import Modelo.Sessao;
import java.util.List;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hermeson Alessandro
 */
public class Tela_excluir_administrador extends javax.swing.JFrame {//Tela de exclusão do administrador.

    /**
     * Creates new form Tela_excluir_administrador
     */
    public Tela_excluir_administrador() {
        initComponents();
        setSaudacao("Login ativo desde:", Sessao.getDataHoraEntrada());
        ListarAdministrador();
        jTable2.getSelectionModel().addListSelectionListener(event ->{
           if(!event.getValueIsAdjusting()){
               int selectedRow = jTable2.getSelectedRow();
               if(selectedRow != -1){
                   CodSelecionado = (int) jTable2.getValueAt(selectedRow, 0);
               }
           } 
        });
    }
    
    public void setSaudacao(String saudacao, String dataHora) {
        jLabel2.setText(saudacao + " - " + dataHora);
    }
    /*
    Quando uma nova instância da tela Tela_excluir_administrador é criada, ela inicializa todos os componentes da interface.
    Define uma saudação com a data e hora do login ativo do usuário.
    Lista todos os administradores na tabela jtable2.
    Adiciona um ouvinte de eventos à tabela para monitorar a seleção de linhas.
    Quando uma linha é selecionada, o valor da primeira coluna da linha selecionada é armazena na variavel codSelecionado.
    */
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tela_excluir_administrador");
        setMinimumSize(new java.awt.Dimension(675, 657));
        setPreferredSize(new java.awt.Dimension(675, 659));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel1.setText("Excluir Administrador(a)");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(90, 20, 510, 64);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Cod", "Nome", "Telefone", "Categoria_tel", "Endereço", "Bairro", "Email", "Senha", "Sexo"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 100, 640, 402);

        jButton1.setText("Excluir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(10, 510, 80, 40);

        jButton2.setText("Voltar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(570, 510, 80, 40);

        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 600, 630, 16);

        jLabel3.setBackground(new java.awt.Color(0, 255, 255));
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 690, 680);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(CodSelecionado != -1){
            int confirmacao = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir um administrador(a)?", "Confirmaçao!", JOptionPane.YES_NO_OPTION);
            if(confirmacao == JOptionPane.YES_NO_OPTION){
                try{
                    AdministradorDAO dao = new AdministradorDAO();
                    dao.ExcluirAdministrador(CodSelecionado);
                    JOptionPane.showMessageDialog(null, "Administrador(a) excluido com sucesso!");
                    if(Sessao.getCodUsuarioAdm() == CodSelecionado){
                        JOptionPane.showMessageDialog(null, "Voce se autoexcluiu e sera redirecionado para a tela de login!");
                        Sessao.LimparSessao();
                        Tela_login tl = new Tela_login();
                        tl.setVisible(true);
                        dispose();
                        return;
                    }
                    ListarAdministrador();
                    List<Administrador> administradores = dao.ListarAdministrador();
                    if(administradores.isEmpty()){
                        JOptionPane.showMessageDialog(null, "Nenhum administrador(a) restante, voce sera deslogado!");
                        Tela_login tl = new Tela_login();
                        tl.setVisible(true);
                        dispose();
                    }
                }catch(SQLException e){
                    JOptionPane.showMessageDialog(null, "Erro ao excluir um administrador(a): " + e.getMessage());
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "Nenhum administrador(a) selecionado!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Tela_ajuste_administrador taa = new Tela_ajuste_administrador();
        taa.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    /*
    O método verifica se um administrador foi selecionado.
    Solicita a confirmação do usuário para a exclusão.
    Tenta excluir e atualiza a lista de administradores.
    Se o administrador for excluído for o usuario naquele momento logado.
    Limpa a sessão e redireciona para a tela de login.
    Trata possíveis erros e fornece feedback ao usuário em cada etapa do processo.
    */
    
    private void ListarAdministrador(){
        AdministradorDAO dao = new AdministradorDAO();
        List<Administrador> administradores = dao.ListarAdministrador();
        DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
        model.setRowCount(0);
        
        for(Administrador administrador : administradores){
            model.addRow(new Object[]{
                administrador.getCod(),
                administrador.getNome(),
                administrador.getTelefone(),
                administrador.getCategoria_tel(),
                administrador.getEndereco(),
                administrador.getBairro(),
                administrador.getEmail(),
                administrador.getSenha(),
                administrador.getSexo(),
            });
        }
    }
    /*
    O método de ListarAdministrador é usado para preencher a tabela jtable2 com os dados de todos os administradores.
    Ele obtem a lista de administradores do banco de dados, limpa a tabela e adiciona uma nova linha para cada Administrador na lista.
    A variável codSelecionado é usado para armazenar o código do administrador atualmente selecionado na tabela.
    */
    private int CodSelecionado = -1;//Variável de instância. 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_excluir_administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_excluir_administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_excluir_administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_excluir_administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela_excluir_administrador().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
