/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Visao;
import DAO.ClienteDAO;
import Modelo.Cliente;
import Modelo.Sessao;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JOptionPane;

/**
 *
 * @author Hermeson Alessandro
 */
public class Tela_alterar_cliente extends javax.swing.JFrame {//Atualiza, carrega e limpa os campos.
private Cliente cliente;

    /**
     * Creates new form Tela_alterar_cliente
     */
    public Tela_alterar_cliente() {
        initComponents();
    }
    
    public Tela_alterar_cliente(Cliente cliente){
        initComponents();
        this.cliente = cliente;
        PreencherCampos();
        setSaudacao("Login ativo desde:", Sessao.getDataHoraEntrada());
    }
    
    public void setSaudacao(String saudacao, String dataHora) {
        jLabel11.setText(saudacao + " - " + dataHora);
    }
    /*
    Tela_alterar_cliente é instanciada.
    Ela inicializa seus componentes, armazena o cliente passado como parametro.
    Preenche os campos da interface com as informações desse cliente.
    Define uma saudação que inclui a data e hora do login ativo.
    */
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tela_alterar_cliente");
        setMinimumSize(new java.awt.Dimension(712, 625));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel1.setText("Alterar Cliente");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(210, 20, 302, 64);

        jLabel2.setText("Cpf");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(130, 100, 30, 16);

        jTextField1.setEditable(false);
        getContentPane().add(jTextField1);
        jTextField1.setBounds(170, 100, 390, 22);

        jLabel3.setText("Nome");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(130, 140, 33, 16);
        getContentPane().add(jTextField2);
        jTextField2.setBounds(170, 140, 390, 22);

        jLabel4.setText("D_nasc");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(130, 180, 50, 16);
        getContentPane().add(jTextField3);
        jTextField3.setBounds(190, 180, 370, 22);

        jLabel5.setText("Sexo");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(130, 220, 40, 16);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "F", "Outros" }));
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(170, 220, 72, 22);

        jLabel6.setText("Endereço");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(130, 260, 70, 16);
        getContentPane().add(jTextField4);
        jTextField4.setBounds(190, 260, 370, 22);

        jLabel7.setText("Telefone");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(130, 300, 60, 16);
        getContentPane().add(jTextField5);
        jTextField5.setBounds(190, 300, 370, 22);

        jLabel8.setText("Email");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(130, 340, 40, 16);
        getContentPane().add(jTextField6);
        jTextField6.setBounds(170, 340, 390, 22);

        jLabel9.setText("Senha");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(130, 380, 40, 16);

        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jPasswordField1);
        jPasswordField1.setBounds(180, 380, 380, 22);

        jLabel10.setText("Fk_rg_sec");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(130, 420, 60, 20);

        jTextField8.setEditable(false);
        getContentPane().add(jTextField8);
        jTextField8.setBounds(200, 420, 360, 22);

        jButton1.setText("Alterar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(150, 480, 72, 40);

        jButton2.setText("Limpar campos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(280, 480, 130, 40);

        jButton4.setText("Voltar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(470, 480, 72, 40);

        jLabel11.setText("jLabel11");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(10, 560, 710, 16);

        jLabel12.setBackground(new java.awt.Color(0, 255, 255));
        jLabel12.setOpaque(true);
        getContentPane().add(jLabel12);
        jLabel12.setBounds(0, 0, 750, 650);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(jTextField1.getText().isEmpty() || jTextField2.getText().isEmpty() || jTextField3.getText().isEmpty()
            || jComboBox1.getSelectedItem() == null || jTextField4.getText().isEmpty() || jTextField5.getText().isEmpty()
            || jTextField6.getText().isEmpty() || jPasswordField1.getPassword().length == 0 || jTextField8.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Campos vazios, por favor preencher todos os campos!");
        }else{
            try{
                String telefone = jTextField5.getText();
                if(!telefone.matches("\\d+")){
                    throw new NumberFormatException("Numero deve conter apenas digitos!");
                }//Deve conter apenas dígitos.
                if(telefone.length() != 11){
                    throw new IllegalArgumentException("Numero deve conter exatamente 11 digitos");
                }//Deve ser um conjunto de numeros exatamente de 11 dígitos.
                String datatexto = jTextField3.getText();
                if (datatexto.isEmpty()) {
                    throw new DateTimeParseException("Data vazia!", datatexto, 0);
                }//Faz a verificação da data para ver se estar vazia.

                if(datatexto.matches("\\d{8}")){
                    datatexto = datatexto.substring(0, 2) + "/" + datatexto.substring(2, 4) + "/" + datatexto.substring(4, 8);
                }
                /*
                Verifica se a string datatexto tem exatamente 8 dígitos.
                Se a verificação for bem-sucedida, formata a string para o formato de data "dd/MM/yyyy".
                */

                String cpf = jTextField1.getText();
                if(cpf.isEmpty()){
                    throw new IllegalArgumentException("Cpf vazio!");
                }//Faz a verificação do cpf
                String cpfNumerico = cpf.replaceAll("\\D", "");
                if(cpfNumerico.length() != 11){
                    throw new IllegalArgumentException("Cpf deve conter exatamente 11 digitos!");
                }//Faz o comprimento da String para ver se tem apenas 11 dígitos.

                DateTimeFormatter formatar = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                LocalDate datanascimento = LocalDate.parse(datatexto,formatar);
                //O DateTimeFormatter está configurado para interpretar essa string no formato "dd/MM/yyyy".

                Cliente cliente = new Cliente();
                cliente.setCpf(jTextField1.getText());
                cliente.setNome(jTextField2.getText());
                cliente.setD_nasc(datanascimento);
                cliente.setSexo(jComboBox1.getSelectedItem().toString());
                cliente.setEndereco(jTextField4.getText());
                cliente.setTelefone(Long.parseLong(telefone));
                cliente.setEmail(jTextField6.getText());
                cliente.setSenha(new String(jPasswordField1.getPassword()));
                cliente.setFk_rg_sec(jTextField8.getText());

                ClienteDAO dao = new ClienteDAO();
                dao.AlterarCliente(cliente);
                JOptionPane.showMessageDialog(null, "Cliente atualizado com sucesso!");
                Tela_ajuste_cliente tac = new Tela_ajuste_cliente();
                tac.setVisible(true);
                dispose();
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Erro de formataçao: " +e.getMessage());
            }catch(DateTimeParseException e){
                JOptionPane.showMessageDialog(null, "Erro de formataçao da data: " +e.getMessage());
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "Erro ao atualizar o cliente: " +e.getMessage());
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Erro inesperado: " +e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jComboBox1.setSelectedItem(0);
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jPasswordField1.setText("");
        jTextField8.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Tela_ajuste_cliente tac = new Tela_ajuste_cliente();
        tac.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed
    /*
    Esse metodo é responsável por realizar a limpeza dos campos.
    Ou seja aonde tiver String vai ser substituida por "" e aonde tiver inteiro vai ser 0 ou seja nada.
    */
        /*
    Em geral esse método verifica se todos os campos obrigatórios estão preenchidos.
    Valida e formata os dados.
    Atualiza as informações do cliente no banco de dados.
    Fornece feedback ao usuário.
    Trata eventuais erros que possam ocorrer durante o processo.
    */
    
    private void PreencherCampos(){
        DateTimeFormatter formatar = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        jTextField1.setText(String.valueOf(cliente.getCpf()));
        jTextField2.setText(cliente.getNome());
        jTextField3.setText(cliente.getD_nasc().format(formatar));
        jComboBox1.setSelectedItem(cliente.getSexo());
        jTextField4.setText(cliente.getEndereco());
        jTextField5.setText(String.valueOf(cliente.getTelefone()));
        jTextField6.setText(cliente.getEmail());
        jPasswordField1.setText(cliente.getSenha());
        jTextField8.setText(cliente.getFk_rg_sec());
    }
    /*
    O metodo de PreencherCampos é reponsável por preencher os campos da interface gráfica com os dados do cliente.
    Permitindo que o usuario visualize, edite, as informações do cliente.
    */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_alterar_cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_alterar_cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_alterar_cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_alterar_cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela_alterar_cliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
}
